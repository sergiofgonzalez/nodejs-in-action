# A sample template illustrating several CloudFormation techniques
# It has not been tested!
# Its value lies in the different syntax constructs used in it
---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template to deploy an EC2 instance with OpenSwan'

Parameters:
  KeyName:
    Description: 'Key Pair name'
    Type: 'AWS::EC2::KeyPair::KeyName'
  VPC:
    Description: 'VPC on which the VM will be placed'
    Type: 'AWS::EC2::VPC::Id'
  Subnet:
    Description: 'Subnet on which the VM will be placed'
    Type: 'AWS::EC2::Subnet::Id'
  IPSecSharedSecret:
    Description: 'Shared secret for IPSec'
    Type: String
  VPNUser:
    Description: 'VPN user'
    Type: String
  VPNPassword:
    Description: 'VPN password'
    Type: String

Mappings:
  RegionToAMIMap:
    # Including only three regions for demonstration purposes
    'us-east-1':
      AMI: 'ami-0915bcb5fa77e4892'

    'eu-central-1':
      AMI: 'ami-02f9ea74050d6f812'

    'ap-southeast-1':
      AMI: 'ami-0d06583a13678c938'

Resources:
  EC2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      InstanceType: 't2.micro'
      SecurityGroupIds:
        - Ref! InstanceSecurityGroup
      KeyName: !Ref KeyName
      ImageId: !FindInMap [RegionToAMIMap, !Ref 'AWS::Region', AMI]
      SubnetId: !Ref Subnet
      UserData:
        'Fn::Base64': !Sub |
          #!/bin/bash -x
          export IPSEC_PSK="${IPSecSharedSecret}"
          export VPN_USER="${VPNUser}"
          export VPN_PASSWORD="${VPNPassword}"
          PRIVATE_IP="$(curl -s http://169.254.169.254/latest/meta-data/local-ipv4)"
          PUBLIC_IP="$(curl -s http://169.254.169.254/latest/meta-data/public-ipv4)"
          yum-config-manager --enable epel
          yum clean all
          yum install -y openswan xl2tpd
          cat > /etc/ipsec.conf <<EOF
          version 2.0
          config setup
            nat_traversal=yes
            virtual_private=%v4:10.0.0.0/8,%v4:192.168.0.0/16,%v4:172.16.0.0/12,%v4:25.0.0.0/8,%v6:fd00::/8,%v6:fe80::/10
            oe=off
            protostack=netkey
            nhelpers=0
            interfaces=%defaultroute
          conn vpnpsk
            auto=add
            left=$PRIVATE_IP
            leftid=$PUBLIC_IP
            leftsubnet=$PRIVATE_IP/32
            leftnexthop=%defaultroute
            leftprotoport=17/1701
            rightprotoport=17/%any
            right=%any
            rightsubnetwithin=0.0.0.0/0
            forceencaps=yes
            authby=secret
            pfs=no
            type=transport
            auth=esp
            ike=3des-sha1
            phase2alg=3des-sha1
            dpddelay=30
            dpdtimeout=120
            dpdaction=clear
          EOF
          cat > /etc/ipsec.secrets <<EOF
          $PUBLIC_IP %any : PSK "${IPSEC_PSK}"
          EOF
          cat > /etc/xl2tpd/xl2tpd.conf <<EOF
          [global]
          port = 1701
          [lns default]
          ip range = 192.168.42.10-192.168.42.250
          local ip = 192.168.42.1
          require chap = yes
          refuse pap = yes
          require authentication = yes
          name = l2tpd
          pppoptfile = /etc/ppp/options.xl2tpd
          length bit = yes
          EOF
          cat > /etc/ppp/chap-secrets <<EOF
          ${VPN_USER} l2tpd ${VPN_PASSWORD} *
          EOF
          cat > /etc/ppp/options.xl2tpd <<EOF
          ipcp-accept-local
          ipcp-accept-remote
          ms-dns 8.8.8.8
          ms-dns 8.8.4.4
          noccp
          auth
          crtscts
          idle 1800
          mtu 1280
          mru 1280
          lock
          connect-delay 5000
          EOF
          iptables -t nat -A POSTROUTING -s 192.168.42.0/24 -o eth0 -j MASQUERADE
          echo 1 > /proc/sys/net/ipv4/ip_forward
          iptables-save > /etc/iptables.rules
          mkdir -p /etc/network/if-pre-up.d
          cat > /etc/network/if-pre-up.d/iptablesload <<EOF
          #!/bin/sh
          iptables-restore < /etc/iptables.rules
          echo 1 > /proc/sys/net/ipv4/ip_forward
          exit 0
          EOF
          service ipsec start
          service xl2tpd start
          chkconfig ipsec on
          chkconfig xl2tpd on
          /opt/aws/bin/cfn-signal -e $? --stack ${AWS::StackName} --resource EC2Instance --region ${AWS::Region}
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M
  InstanceSecurityGroup:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: 'Acess to VPN server'
      VpcId: !Ref VPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: '0.0.0.0/0'
        - IpProtocol: udp
          FromPort: 500
          ToPort: 500
          CidrIp: '0.0.0.0/0'
        - IpProtocol: udp
          FromPort: 1701
          ToPort: 1701
          CidrIp: '0.0.0.0/0'
        - IpProtocol: udp
          FromPort: 4500
          ToPort: 4500
          CidrIp: '0.0.0.0/0'
Outputs:
  ServerIP:
    Description: 'Public IP address of the vpn server'
    Value: !GetAtt 'EC2Instance.PublicIp'
  IPSecSharedSecret:
    Description: 'Shared key for the VPN connection (IPSec)'
    Value: !Ref  IPSecSharedSecret
  VPNUser:
    Description: 'The username for the vpn connection'
    Value: !Ref VPNUser
  VPNPassword:
    Description: 'The password for the vpn connection'
    Value: !Ref VPNPassword
